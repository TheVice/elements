import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

def ndkPath = null

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    ndkPath = ndkDirectory

    defaultConfig {
        minSdkVersion 5
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = []
        assets.srcDirs = ['src/main/assets', 'src/../../../../../../assets']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles.add(file('proguard-project.txt'))
        }
    }
}

task ndkBuild(type: Exec) {
    def ndkBuildExt = (Os.isFamily(Os.FAMILY_WINDOWS)) ? '.cmd' : ''
    commandLine "${ndkPath}${File.separator}ndk-build${ndkBuildExt}",
            '-C', file('src/main/jni').absolutePath,
            '-j', Runtime.runtime.availableProcessors(),
            'NDK_DEBUG=0'
}

task ndkClean(type: Exec) {
    def ndkBuildExt = (Os.isFamily(Os.FAMILY_WINDOWS)) ? '.cmd' : ''
    commandLine "${ndkPath}${File.separator}ndk-build${ndkBuildExt}",
            '-C', file('src/main/jni').absolutePath,
            'clean'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

clean.dependsOn ndkClean
